-- *** MOCS-COPYRIGHT-NOTICE-BEGIN ***
--
-- This copyright notice is auto-generated by ./add-copyright-notice.
-- Additional copyright notices must be added below the last line of this notice.
--
-- MoCS (https://lewis.cs.uni-saarland.de/tools/mocs/): "vhdl/countdown_tb.vhdl".
-- The content of this file is copyright of Saarland University -
-- Copyright (C) 2009 Saarland University, Reactive Systems Group, Lars Kuhtz.
--
-- This file is part of MoCS (https://lewis.cs.uni-saarland.de/tools/mocs/).
--
-- License: three-clause BSD style license.
-- The license text can be found in the file LICENSE.
--
-- *** MOCS-COPYRIGHT-NOTICE-END ***

-- -----------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use work.countdown;

entity countdown_tb is
end countdown_tb;

architecture Behavioral of countdown_tb is

    constant max : Integer := 5;
    signal CLOCK, o : STD_LOGIC;
    signal ticks : Integer := 0; -- interal

begin
    process
    begin 
        CLOCK <= '1'; wait for 5 ns;
        CLOCK <= '0'; wait for 5 ns;
    end process;

    countdown0 : entity work.countdown(Behavioral)
    generic map(max => max)
    port map(CLOCK,o);

    check0 : process(CLOCK)
    begin
        if (CLOCK'event and CLOCK='1') then
            ticks <= ticks + 1;
        end if;
    end process;
    
    check1 : process(CLOCK)
    begin
        assert (ticks < max-1) xor (o = '1') report "counter failed";
        assert (0 = 1) report "ticks = " & integer'image(ticks) & ", o = " & std_logic'image(o);
    end process;
end Behavioral;

