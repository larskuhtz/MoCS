-- *** MOCS-COPYRIGHT-NOTICE-BEGIN ***
--
-- This copyright notice is auto-generated by ./add-copyright-notice.
-- Additional copyright notices must be added below the last line of this notice.
--
-- MoCS (https://lewis.cs.uni-saarland.de/tools/mocs/): "vhdl/countdown.vhdl".
-- The content of this file is copyright of Saarland University -
-- Copyright (C) 2009 Saarland University, Reactive Systems Group, Lars Kuhtz <kuhtz@cs.uni-sb.de>.
--
-- This file is part of MoCS (https://lewis.cs.uni-saarland.de/tools/mocs/).
--
-- License: three-clause BSD style license.
-- The license text can be found in the file LICENSE.
--
-- *** MOCS-COPYRIGHT-NOTICE-END ***

-- Static down-counter based on integer decrement
-- Counts clock ticks
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity countdown is
  generic(max : Integer := 0);
  port(CLOCK : in STD_LOGIC;
       output : out STD_LOGIC := '1');
end countdown;

-- Better provide a structural architecture
architecture Behavioral of countdown is
begin
  process(CLOCK)
  variable cnt: Integer := max-1;
  begin

      if (max > 0) then
          if (cnt > -1 and CLOCK'event and CLOCK='1') then
              cnt := cnt - 1;
          end if;
          if (cnt = 0) then output <= '1'; end if;
          if (cnt = -1) then output <= '0'; end if;
      else
          if (CLOCK'event and CLOCK='1') then
              cnt := cnt - 1;
          end if;
          if (cnt = -2) then output <= '1'; end if;
          if (cnt < -2) then output <= '0'; end if;
      end if;
  end process;
end Behavioral;

