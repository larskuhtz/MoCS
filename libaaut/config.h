/* *** MOCS-COPYRIGHT-NOTICE-BEGIN ***
 *
 * This copyright notice is auto-generated by ./add-copyright-notice.
 * Additional copyright notices must be added below the last line of this notice.
 *
 * MoCS (https://lewis.cs.uni-saarland.de/tools/mocs/): "libaaut/config.h".
 * The content of this file is copyright of Saarland University -
 * Copyright (C) 2009 Saarland University, Reactive Systems Group, Lars Kuhtz.
 *
 * This file is part of MoCS (https://lewis.cs.uni-saarland.de/tools/mocs/).
 *
 * License: three-clause BSD style license.
 * The license text can be found in the file LICENSE.
 *
 * *** MOCS-COPYRIGHT-NOTICE-END *** */

// do not deallocate expressions (within efac). (Does not not seem to have much effect)
//#define NO_EXPR_DEALLOC

// Use iterative implementation of get_ops (enableing make things worth)
//#define NOREC_GET_OPS

// User iterative implementation of distr (enableing make things worth)
//#define NOREC_DISTR

// use dynamic programming to cache calls to lambda
#define LAMBDA_CACHE

// does help somewhat cnf(a \or b \or c) is computed as cnf ((cnf (cnf(a) \or b)) \or c)
// each call to cnf is cached
#define CNF_WRAPPER_CACHE
#define SPLIT_WRAPPER_CACHE
#define UNIV_GET_NEXT_STATE_EXPR_CACHE
#define SUC_EXPR_CACHE
#define SUBSET_OP_CACHE

/* ************************************************************************** */
/* Debugging */

#define NDEBUG
//#define DEBUG
//#define DEBUG_UNIV
//#define EFAC_HASH_INTERFACE
//#define CHECK_ASSERTIONS
