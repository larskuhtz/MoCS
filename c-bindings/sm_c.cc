/* *** MOCS-COPYRIGHT-NOTICE-BEGIN ***
 *
 * This copyright notice is auto-generated by ./add-copyright-notice.
 * Additional copyright notices must be added below the last line of this notice.
 *
 * MoCS (https://lewis.cs.uni-saarland.de/tools/mocs/): "c-bindings/sm_c.cc".
 * The content of this file is copyright of Saarland University -
 * Copyright (C) 2009 Saarland University, Reactive Systems Group, Lars Kuhtz.
 *
 * This file is part of MoCS (https://lewis.cs.uni-saarland.de/tools/mocs/).
 *
 * License: three-clause BSD style license.
 * The license text can be found in the file LICENSE.
 *
 * *** MOCS-COPYRIGHT-NOTICE-END *** */

#include <fstream>

#include "aa.hh"
#include "vhdl.hh"
#include "state-machine.hh"

#include "sm.h"

using namespace c::context;

// constructors/ destructors
void free_state_machine(state_machine_ptr a)
{
    delete a;
}

// Get Context
context_ptr get_sm_context(state_machine_ptr a)
{
    return new context_t(a->init->efac());
}

state_machine_ptr mk_state_machine(automaton_ptr a)
{
    return new state_machine_t(*a);
}

// pretty-printing
void state_machine2dot(const char* file_name, const state_machine_ptr a, const char* name)
{
    std::ofstream file(file_name);
    if (file) {
        state_machine2dot(file,*a,name);
    } else {
        std::cerr << "Error: Failed to open file for writing." << std::endl;
    }
}

