/* *** MOCS-COPYRIGHT-NOTICE-BEGIN ***
 *
 * This copyright notice is auto-generated by ./add-copyright-notice.
 * Additional copyright notices must be added below the last line of this notice.
 *
 * MoCS (https://lewis.cs.uni-saarland.de/tools/mocs/): "c-bindings/expr.h".
 * The content of this file is copyright of Saarland University -
 * Copyright (C) 2009 Saarland University, Reactive Systems Group, Lars Kuhtz.
 *
 * This file is part of MoCS (https://lewis.cs.uni-saarland.de/tools/mocs/).
 *
 * License: three-clause BSD style license.
 * The license text can be found in the file LICENSE.
 *
 * *** MOCS-COPYRIGHT-NOTICE-END *** */

#ifndef _EXPR_H_
#define _EXPR_H_

#include "context.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef long* c_prop_t; // should be an array/ vector

// incomplete. Pure pointer-interface.
struct expr_t;
typedef struct expr_t* expr_ptr;

// constructors/ destructors
// expr_ptr expr_new();
void expr_free(expr_ptr);

// copy expression into traget_context
expr_ptr copy(const expr_ptr, context_ptr target_context);

// printing
void expr_expr2dot(const char* file_name, const expr_ptr, const char* name);
char* expr_exprs2dot(const char* file_name, const expr_ptr*,int dim, const char* name);
char* expr_exprs2dot_(const char* file_name, const expr_ptr*, const char* name); // null-terminated
char* expr_to_string(const expr_ptr);

// comparing
int expr_eq(const expr_ptr, const expr_ptr);

// querying
int expr_is_false(const expr_ptr);
int expr_is_true(const expr_ptr);
context_ptr expr_get_context(const expr_ptr);
//expr_ptr* expr_get_childreen(const expr_ptr); // returns null-terminated array
// TODO query type and content

int expr_size(const expr_ptr);
int exprs_size(const expr_ptr*); // null-terminated

// manipulation
expr_ptr expr_and(const expr_ptr,const expr_ptr);
expr_ptr expr_or(const expr_ptr,const expr_ptr);
// TODO missing generators (from efac)

#ifdef __cplusplus
}
#endif

#endif // _EXPR_H_
